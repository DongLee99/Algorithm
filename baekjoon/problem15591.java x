import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

class main {

    public static List<Node> [] USADO;
    public static class Node {
        public int index;
        public int weight;

        public Node(int index, int weight) {
            this.index = index;
            this.weight = weight;
        }
    }

    public static int search(int k, int v) {
        PriorityQueue<Integer> q = new PriorityQueue<>();
        q.offer(k);
        int count = 0;

        boolean check[] = new boolean[USADO.length];
        while(!q.isEmpty()) {
            int cur = q.poll();
            for (Node next: USADO[cur]) {
                if (!check[next.index] && v <= next.weight) {
                    q.offer(next.index);
                    check[next.index] = true;
                    count++;
                }
            }
        }
        return count;
    }

    public static void main(String[] args) throws IOException {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int Q = scanner.nextInt();
        USADO = new ArrayList[N+1];

        for (int i = 0; i < N + 1; i++) {
            USADO[i] = new ArrayList<>();
        }

        for (int i = 0; i < N - 1; i++) {
            int p = scanner.nextInt();
            int q = scanner.nextInt();
            int r = scanner.nextInt();
            USADO[p].add(new Node(q, r));
            USADO[q].add(new Node(p, r));
        }

        for (int i = 0; i < Q; i++) {
            int k = scanner.nextInt();
            int v = scanner.nextInt();
            System.out.println(search(k, v));
        }
    }
}